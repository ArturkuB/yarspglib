# Generated from E:/Downloads/yarspg-5.0.0/yarspg-5.0.0/parser/python/YARSpg.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,47,345,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,
        13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,
        18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,
        20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
        28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,
        30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,
        31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,
        34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,
        36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,
        38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,
        40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,5,42,304,
        8,42,10,42,12,42,307,9,42,1,42,1,42,1,43,1,43,1,43,1,43,5,43,315,
        8,43,10,43,12,43,318,9,43,1,43,1,43,1,44,1,44,1,44,5,44,325,8,44,
        10,44,12,44,328,9,44,3,44,330,8,44,1,45,1,45,5,45,334,8,45,10,45,
        12,45,337,9,45,1,46,4,46,340,8,46,11,46,12,46,341,1,46,1,46,0,0,
        47,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,1,0,28,2,0,66,66,98,98,2,0,79,79,111,111,2,0,76,76,108,
        108,2,0,83,83,115,115,2,0,84,84,116,116,2,0,82,82,114,114,2,0,73,
        73,105,105,2,0,78,78,110,110,2,0,71,71,103,103,2,0,89,89,121,121,
        2,0,69,69,101,101,2,0,85,85,117,117,2,0,68,68,100,100,2,0,67,67,
        99,99,2,0,77,77,109,109,2,0,65,65,97,97,2,0,70,70,102,102,2,0,88,
        88,120,120,2,0,81,81,113,113,2,0,80,80,112,112,2,0,10,10,12,13,4,
        0,10,10,13,13,34,34,92,92,8,0,34,34,39,39,92,92,98,98,102,102,110,
        110,114,114,116,116,1,0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,
        0,48,57,65,90,95,95,97,122,2,0,9,10,32,32,351,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,1,95,1,0,0,0,3,97,1,0,0,0,5,99,1,0,0,0,7,101,1,0,0,0,9,103,1,
        0,0,0,11,105,1,0,0,0,13,107,1,0,0,0,15,109,1,0,0,0,17,111,1,0,0,
        0,19,113,1,0,0,0,21,115,1,0,0,0,23,117,1,0,0,0,25,119,1,0,0,0,27,
        121,1,0,0,0,29,123,1,0,0,0,31,125,1,0,0,0,33,127,1,0,0,0,35,130,
        1,0,0,0,37,132,1,0,0,0,39,137,1,0,0,0,41,144,1,0,0,0,43,150,1,0,
        0,0,45,158,1,0,0,0,47,167,1,0,0,0,49,175,1,0,0,0,51,181,1,0,0,0,
        53,190,1,0,0,0,55,204,1,0,0,0,57,209,1,0,0,0,59,214,1,0,0,0,61,224,
        1,0,0,0,63,233,1,0,0,0,65,242,1,0,0,0,67,246,1,0,0,0,69,251,1,0,
        0,0,71,257,1,0,0,0,73,264,1,0,0,0,75,272,1,0,0,0,77,276,1,0,0,0,
        79,280,1,0,0,0,81,287,1,0,0,0,83,292,1,0,0,0,85,301,1,0,0,0,87,310,
        1,0,0,0,89,329,1,0,0,0,91,331,1,0,0,0,93,339,1,0,0,0,95,96,5,43,
        0,0,96,2,1,0,0,0,97,98,5,36,0,0,98,4,1,0,0,0,99,100,5,61,0,0,100,
        6,1,0,0,0,101,102,5,44,0,0,102,8,1,0,0,0,103,104,5,91,0,0,104,10,
        1,0,0,0,105,106,5,93,0,0,106,12,1,0,0,0,107,108,5,64,0,0,108,14,
        1,0,0,0,109,110,5,60,0,0,110,16,1,0,0,0,111,112,5,58,0,0,112,18,
        1,0,0,0,113,114,5,62,0,0,114,20,1,0,0,0,115,116,5,47,0,0,116,22,
        1,0,0,0,117,118,5,123,0,0,118,24,1,0,0,0,119,120,5,125,0,0,120,26,
        1,0,0,0,121,122,5,40,0,0,122,28,1,0,0,0,123,124,5,41,0,0,124,30,
        1,0,0,0,125,126,5,45,0,0,126,32,1,0,0,0,127,128,5,45,0,0,128,129,
        5,62,0,0,129,34,1,0,0,0,130,131,5,83,0,0,131,36,1,0,0,0,132,133,
        7,0,0,0,133,134,7,1,0,0,134,135,7,1,0,0,135,136,7,2,0,0,136,38,1,
        0,0,0,137,138,7,3,0,0,138,139,7,4,0,0,139,140,7,5,0,0,140,141,7,
        6,0,0,141,142,7,7,0,0,142,143,7,8,0,0,143,40,1,0,0,0,144,145,7,0,
        0,0,145,146,7,9,0,0,146,147,7,4,0,0,147,148,7,10,0,0,148,149,7,3,
        0,0,149,42,1,0,0,0,150,151,7,6,0,0,151,152,7,7,0,0,152,153,7,4,0,
        0,153,154,7,10,0,0,154,155,7,8,0,0,155,156,7,10,0,0,156,157,7,5,
        0,0,157,44,1,0,0,0,158,159,7,11,0,0,159,160,7,6,0,0,160,161,7,7,
        0,0,161,162,7,4,0,0,162,163,7,10,0,0,163,164,7,8,0,0,164,165,7,10,
        0,0,165,166,7,5,0,0,166,46,1,0,0,0,167,168,7,12,0,0,168,169,7,10,
        0,0,169,170,7,13,0,0,170,171,7,6,0,0,171,172,7,14,0,0,172,173,7,
        15,0,0,173,174,7,2,0,0,174,48,1,0,0,0,175,176,7,16,0,0,176,177,7,
        2,0,0,177,178,7,1,0,0,178,179,7,15,0,0,179,180,7,4,0,0,180,50,1,
        0,0,0,181,182,7,12,0,0,182,183,7,15,0,0,183,184,7,4,0,0,184,185,
        7,10,0,0,185,186,7,4,0,0,186,187,7,6,0,0,187,188,7,14,0,0,188,189,
        7,10,0,0,189,52,1,0,0,0,190,191,7,2,0,0,191,192,7,1,0,0,192,193,
        7,13,0,0,193,194,7,15,0,0,194,195,7,2,0,0,195,196,7,12,0,0,196,197,
        7,15,0,0,197,198,7,4,0,0,198,199,7,10,0,0,199,200,7,4,0,0,200,201,
        7,6,0,0,201,202,7,14,0,0,202,203,7,10,0,0,203,54,1,0,0,0,204,205,
        7,12,0,0,205,206,7,15,0,0,206,207,7,4,0,0,207,208,7,10,0,0,208,56,
        1,0,0,0,209,210,7,4,0,0,210,211,7,6,0,0,211,212,7,14,0,0,212,213,
        7,10,0,0,213,58,1,0,0,0,214,215,7,2,0,0,215,216,7,1,0,0,216,217,
        7,13,0,0,217,218,7,15,0,0,218,219,7,2,0,0,219,220,7,4,0,0,220,221,
        7,6,0,0,221,222,7,14,0,0,222,223,7,10,0,0,223,60,1,0,0,0,224,225,
        7,12,0,0,225,226,7,11,0,0,226,227,7,5,0,0,227,228,7,15,0,0,228,229,
        7,4,0,0,229,230,7,6,0,0,230,231,7,1,0,0,231,232,7,7,0,0,232,62,1,
        0,0,0,233,234,7,14,0,0,234,235,7,11,0,0,235,236,7,2,0,0,236,237,
        7,4,0,0,237,238,7,6,0,0,238,239,7,3,0,0,239,240,7,10,0,0,240,241,
        7,4,0,0,241,64,1,0,0,0,242,243,7,3,0,0,243,244,7,10,0,0,244,245,
        7,4,0,0,245,66,1,0,0,0,246,247,7,2,0,0,247,248,7,6,0,0,248,249,7,
        3,0,0,249,250,7,4,0,0,250,68,1,0,0,0,251,252,7,12,0,0,252,253,7,
        2,0,0,253,254,7,6,0,0,254,255,7,3,0,0,255,256,7,4,0,0,256,70,1,0,
        0,0,257,258,7,3,0,0,258,259,7,4,0,0,259,260,7,5,0,0,260,261,7,11,
        0,0,261,262,7,13,0,0,262,263,7,4,0,0,263,72,1,0,0,0,264,265,7,12,
        0,0,265,266,7,10,0,0,266,267,7,16,0,0,267,268,7,15,0,0,268,269,7,
        11,0,0,269,270,7,2,0,0,270,271,7,4,0,0,271,74,1,0,0,0,272,273,7,
        14,0,0,273,274,7,6,0,0,274,275,7,7,0,0,275,76,1,0,0,0,276,277,7,
        14,0,0,277,278,7,15,0,0,278,279,7,17,0,0,279,78,1,0,0,0,280,281,
        7,11,0,0,281,282,7,7,0,0,282,283,7,6,0,0,283,284,7,18,0,0,284,285,
        7,11,0,0,285,286,7,10,0,0,286,80,1,0,0,0,287,288,7,7,0,0,288,289,
        7,11,0,0,289,290,7,2,0,0,290,291,7,2,0,0,291,82,1,0,0,0,292,293,
        7,1,0,0,293,294,7,19,0,0,294,295,7,4,0,0,295,296,7,6,0,0,296,297,
        7,1,0,0,297,298,7,7,0,0,298,299,7,15,0,0,299,300,7,2,0,0,300,84,
        1,0,0,0,301,305,5,35,0,0,302,304,8,20,0,0,303,302,1,0,0,0,304,307,
        1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,306,308,1,0,0,0,307,305,
        1,0,0,0,308,309,6,42,0,0,309,86,1,0,0,0,310,316,5,34,0,0,311,315,
        8,21,0,0,312,313,5,92,0,0,313,315,7,22,0,0,314,311,1,0,0,0,314,312,
        1,0,0,0,315,318,1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,0,317,319,
        1,0,0,0,318,316,1,0,0,0,319,320,5,34,0,0,320,88,1,0,0,0,321,330,
        5,48,0,0,322,326,7,23,0,0,323,325,7,24,0,0,324,323,1,0,0,0,325,328,
        1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,330,1,0,0,0,328,326,
        1,0,0,0,329,321,1,0,0,0,329,322,1,0,0,0,330,90,1,0,0,0,331,335,7,
        25,0,0,332,334,7,26,0,0,333,332,1,0,0,0,334,337,1,0,0,0,335,333,
        1,0,0,0,335,336,1,0,0,0,336,92,1,0,0,0,337,335,1,0,0,0,338,340,7,
        27,0,0,339,338,1,0,0,0,340,341,1,0,0,0,341,339,1,0,0,0,341,342,1,
        0,0,0,342,343,1,0,0,0,343,344,6,46,0,0,344,94,1,0,0,0,8,0,305,314,
        316,326,329,335,341,1,6,0,0
    ]

class YARSpgLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    BOOL = 19
    STRING = 20
    BYTES = 21
    INTEGER = 22
    UINTEGER = 23
    DECIMAL = 24
    FLOAT = 25
    DATETIME = 26
    LOCALDATETIME = 27
    DATE = 28
    TIME = 29
    LOCALTIME = 30
    DURATION = 31
    MULTISET = 32
    SET = 33
    LIST = 34
    DLIST = 35
    STRUCT = 36
    DEFAULT = 37
    MIN = 38
    MAX = 39
    UNIQUE = 40
    NULL = 41
    OPTIONAL = 42
    COMMENT = 43
    STR = 44
    UNSIGNED_INT = 45
    ALNUMPLUS = 46
    WS = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'$'", "'='", "','", "'['", "']'", "'@'", "'<'", "':'", 
            "'>'", "'/'", "'{'", "'}'", "'('", "')'", "'-'", "'->'", "'S'" ]

    symbolicNames = [ "<INVALID>",
            "BOOL", "STRING", "BYTES", "INTEGER", "UINTEGER", "DECIMAL", 
            "FLOAT", "DATETIME", "LOCALDATETIME", "DATE", "TIME", "LOCALTIME", 
            "DURATION", "MULTISET", "SET", "LIST", "DLIST", "STRUCT", "DEFAULT", 
            "MIN", "MAX", "UNIQUE", "NULL", "OPTIONAL", "COMMENT", "STR", 
            "UNSIGNED_INT", "ALNUMPLUS", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "BOOL", "STRING", 
                  "BYTES", "INTEGER", "UINTEGER", "DECIMAL", "FLOAT", "DATETIME", 
                  "LOCALDATETIME", "DATE", "TIME", "LOCALTIME", "DURATION", 
                  "MULTISET", "SET", "LIST", "DLIST", "STRUCT", "DEFAULT", 
                  "MIN", "MAX", "UNIQUE", "NULL", "OPTIONAL", "COMMENT", 
                  "STR", "UNSIGNED_INT", "ALNUMPLUS", "WS" ]

    grammarFileName = "YARSpg.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


